{
	"id": "994f845fb1daa744b1bfb7bb32129a0b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Registry/IContractRegistry.sol": {
				"content": "pragma solidity ^0.8.0;\n\ninterface IContractRegistryMod {\n    \n\n   /*\n    *  @notice REQUIRED The event that is emitted when the contract gets added to the registry\n    *  @param name the name of the contract\n    *  @param contractAddress the address of the added contract\n    *  @param isProxy whether the added contract is a proxy\n    */\n   event AddedContract(string name, address contractAddress);\n\n   /**\n    *  @notice REQUIRED The event that is emitted when the contract get removed from the registry\n    *  @param name the name of the removed contract\n    */\n   event RemovedContract(string name);\n\n   /**\n    *  @notice REQUIRED The function that returns an associated contract by the name\n    *  @param name the name of the contract\n    *  @return the address of the contract\n    */\n   function getContract(string memory name) external view returns (address);\n\n   /**\n    *  @notice OPTIONAL The function that checks if a contract with a given name has been added\n    *  @param name the name of the contract\n    *  @return true if the contract is present in the registry\n    */\n   function hasContract(string memory name) external view returns (bool);\n\n   /**\n    *  @notice RECOMMENDED The function that returns the admin of the added proxy contracts\n    *  @return the proxy admin address\n    */\n   function getUpgrader(string memory name) external view returns (address);\n\n   /**\n    *  @notice RECOMMENDED The function that returns an implementation of the given proxy contract\n    *  @param name the name of the contract\n    *  @return the implementation address\n    */\n   function getImplementation(string memory name) external view returns (address);\n\n   /**\n    *  @notice REQUIRED The function that upgrades added proxy contract with a new implementation\n    *  @param name the name of the proxy contract\n    *  @param newImplementation the new implementation the proxy will be upgraded to\n    *\n    *  It is the Owner's responsibility to ensure the compatibility between implementations\n    */\n   function upgradeContract(string memory name, address newImplementation) external;\n\n   /**\n    *  @notice REQUIRED The function that adds pure (non-proxy) contracts to the ContractsRegistry. The contracts MAY either be\n    *  the ones the system does not have direct upgradeability control over or the ones that are not upgradeable by design\n    *  @param name the name to associate the contract with\n    *  @param contractAddress the address of the contract\n    */\n   function addContract(string memory name, address contractAddress) external;\n\n   /**\n    *  @notice REQUIRED The function to remove contracts from the ContractsRegistry\n    *  @param name the associated name with the contract\n    */\n   function removeContract(string memory name) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Registry/IContractRegistry.sol": {
				"IContractRegistryMod": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "AddedContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "RemovedContract",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "addContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "getContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "getImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "getUpgrader",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "hasContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "removeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RemovedContract(string)": {
								"params": {
									"name": "the name of the removed contract"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addContract(string,address)": {
								"params": {
									"contractAddress": "the address of the contract",
									"name": "the name to associate the contract with"
								}
							},
							"getContract(string)": {
								"params": {
									"name": "the name of the contract"
								},
								"returns": {
									"_0": "the address of the contract"
								}
							},
							"getImplementation(string)": {
								"params": {
									"name": "the name of the contract"
								},
								"returns": {
									"_0": "the implementation address"
								}
							},
							"getUpgrader(string)": {
								"returns": {
									"_0": "the proxy admin address"
								}
							},
							"hasContract(string)": {
								"params": {
									"name": "the name of the contract"
								},
								"returns": {
									"_0": "true if the contract is present in the registry"
								}
							},
							"removeContract(string)": {
								"params": {
									"name": "the associated name with the contract"
								}
							},
							"upgradeContract(string,address)": {
								"params": {
									"name": "the name of the proxy contract",
									"newImplementation": "the new implementation the proxy will be upgraded to  It is the Owner's responsibility to ensure the compatibility between implementations"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addContract(string,address)": "bf5b6016",
							"getContract(string)": "35817773",
							"getImplementation(string)": "6b683896",
							"getUpgrader(string)": "2d4e5980",
							"hasContract(string)": "8c223601",
							"removeContract(string)": "97623b58",
							"upgradeContract(string,address)": "1271bd53"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"AddedContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"RemovedContract\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"addContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getUpgrader\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"hasContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"removeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RemovedContract(string)\":{\"params\":{\"name\":\"the name of the removed contract\"}}},\"kind\":\"dev\",\"methods\":{\"addContract(string,address)\":{\"params\":{\"contractAddress\":\"the address of the contract\",\"name\":\"the name to associate the contract with\"}},\"getContract(string)\":{\"params\":{\"name\":\"the name of the contract\"},\"returns\":{\"_0\":\"the address of the contract\"}},\"getImplementation(string)\":{\"params\":{\"name\":\"the name of the contract\"},\"returns\":{\"_0\":\"the implementation address\"}},\"getUpgrader(string)\":{\"returns\":{\"_0\":\"the proxy admin address\"}},\"hasContract(string)\":{\"params\":{\"name\":\"the name of the contract\"},\"returns\":{\"_0\":\"true if the contract is present in the registry\"}},\"removeContract(string)\":{\"params\":{\"name\":\"the associated name with the contract\"}},\"upgradeContract(string,address)\":{\"params\":{\"name\":\"the name of the proxy contract\",\"newImplementation\":\"the new implementation the proxy will be upgraded to  It is the Owner's responsibility to ensure the compatibility between implementations\"}}},\"version\":1},\"userdoc\":{\"events\":{\"RemovedContract(string)\":{\"notice\":\"REQUIRED The event that is emitted when the contract get removed from the registry\"}},\"kind\":\"user\",\"methods\":{\"addContract(string,address)\":{\"notice\":\"REQUIRED The function that adds pure (non-proxy) contracts to the ContractsRegistry. The contracts MAY either be  the ones the system does not have direct upgradeability control over or the ones that are not upgradeable by design\"},\"getContract(string)\":{\"notice\":\"REQUIRED The function that returns an associated contract by the name\"},\"getImplementation(string)\":{\"notice\":\"RECOMMENDED The function that returns an implementation of the given proxy contract\"},\"getUpgrader(string)\":{\"notice\":\"RECOMMENDED The function that returns the admin of the added proxy contracts\"},\"hasContract(string)\":{\"notice\":\"OPTIONAL The function that checks if a contract with a given name has been added\"},\"removeContract(string)\":{\"notice\":\"REQUIRED The function to remove contracts from the ContractsRegistry\"},\"upgradeContract(string,address)\":{\"notice\":\"REQUIRED The function that upgrades added proxy contract with a new implementation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry/IContractRegistry.sol\":\"IContractRegistryMod\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Registry/IContractRegistry.sol\":{\"keccak256\":\"0x4ff7395d8fa967e94774d311861d5e9cc35ecba81d73a25c25491c2223dcf935\",\"urls\":[\"bzz-raw://5c0fe5917f5bb7c894861f36054473d4a051706b9f60bee46b1bbdae402efa02\",\"dweb:/ipfs/QmZsLxtcMSSsVV1GirPxua96D4E34yw9j8hzCx4Tn1jyuD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"RemovedContract(string)": {
								"notice": "REQUIRED The event that is emitted when the contract get removed from the registry"
							}
						},
						"kind": "user",
						"methods": {
							"addContract(string,address)": {
								"notice": "REQUIRED The function that adds pure (non-proxy) contracts to the ContractsRegistry. The contracts MAY either be  the ones the system does not have direct upgradeability control over or the ones that are not upgradeable by design"
							},
							"getContract(string)": {
								"notice": "REQUIRED The function that returns an associated contract by the name"
							},
							"getImplementation(string)": {
								"notice": "RECOMMENDED The function that returns an implementation of the given proxy contract"
							},
							"getUpgrader(string)": {
								"notice": "RECOMMENDED The function that returns the admin of the added proxy contracts"
							},
							"hasContract(string)": {
								"notice": "OPTIONAL The function that checks if a contract with a given name has been added"
							},
							"removeContract(string)": {
								"notice": "REQUIRED The function to remove contracts from the ContractsRegistry"
							},
							"upgradeContract(string,address)": {
								"notice": "REQUIRED The function that upgrades added proxy contract with a new implementation"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Registry/IContractRegistry.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Registry/IContractRegistry.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Registry/IContractRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Registry/IContractRegistry.sol",
					"exportedSymbols": {
						"IContractRegistryMod": [
							67
						]
					},
					"id": 68,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IContractRegistryMod",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "IContractRegistryMod",
							"nameLocation": "35:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "6130f2e3c893e99120ae105d8ca4a81834e9eea2d56b76a78fe306d0fabd7bf2",
									"id": 7,
									"name": "AddedContract",
									"nameLocation": "349:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "370:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "363:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "384:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "376:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:38:0"
									},
									"src": "343:58:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "406:160:0",
										"text": "  @notice REQUIRED The event that is emitted when the contract get removed from the registry\n  @param name the name of the removed contract"
									},
									"eventSelector": "2216f135d7c337bc5b25f8bf96227730d40241c50adf6fde4d180deca4b25664",
									"id": 12,
									"name": "RemovedContract",
									"nameLocation": "576:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "599:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "592:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:13:0"
									},
									"src": "570:35:0"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "610:182:0",
										"text": "  @notice REQUIRED The function that returns an associated contract by the name\n  @param name the name of the contract\n  @return the address of the contract"
									},
									"functionSelector": "35817773",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContract",
									"nameLocation": "805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "831:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "817:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 14,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:9:0"
									},
									"scope": 67,
									"src": "796:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "874:213:0",
										"text": "  @notice OPTIONAL The function that checks if a contract with a given name has been added\n  @param name the name of the contract\n  @return true if the contract is present in the registry"
									},
									"functionSelector": "8c223601",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasContract",
									"nameLocation": "1100:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1126:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1112:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1112:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:20:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1155:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 25,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1155:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:6:0"
									},
									"scope": 67,
									"src": "1091:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1166:141:0",
										"text": "  @notice RECOMMENDED The function that returns the admin of the added proxy contracts\n  @return the proxy admin address"
									},
									"functionSelector": "2d4e5980",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUpgrader",
									"nameLocation": "1320:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1346:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1332:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 30,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:20:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1375:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1374:9:0"
									},
									"scope": 67,
									"src": "1311:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1389:195:0",
										"text": "  @notice RECOMMENDED The function that returns an implementation of the given proxy contract\n  @param name the name of the contract\n  @return the implementation address"
									},
									"functionSelector": "6b683896",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1597:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1629:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1615:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 38,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:20:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1658:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1657:9:0"
									},
									"scope": 67,
									"src": "1588:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1672:341:0",
										"text": "  @notice REQUIRED The function that upgrades added proxy contract with a new implementation\n  @param name the name of the proxy contract\n  @param newImplementation the new implementation the proxy will be upgraded to\n  It is the Owner's responsibility to ensure the compatibility between implementations"
									},
									"functionSelector": "1271bd53",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeContract",
									"nameLocation": "2026:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2056:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2042:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 46,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2042:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2070:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2062:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:47:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:0:0"
									},
									"scope": 67,
									"src": "2017:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2103:378:0",
										"text": "  @notice REQUIRED The function that adds pure (non-proxy) contracts to the ContractsRegistry. The contracts MAY either be\n  the ones the system does not have direct upgradeability control over or the ones that are not upgradeable by design\n  @param name the name to associate the contract with\n  @param contractAddress the address of the contract"
									},
									"functionSelector": "bf5b6016",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addContract",
									"nameLocation": "2494:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2520:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2506:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 54,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2506:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "2534:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2526:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:45:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:0:0"
									},
									"scope": 67,
									"src": "2485:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2565:151:0",
										"text": "  @notice REQUIRED The function to remove contracts from the ContractsRegistry\n  @param name the associated name with the contract"
									},
									"functionSelector": "97623b58",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeContract",
									"nameLocation": "2729:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2758:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2744:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 62,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2744:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:20:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2772:0:0"
									},
									"scope": 67,
									"src": "2720:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 68,
							"src": "25:2750:0",
							"usedErrors": []
						}
					],
					"src": "0:2776:0"
				},
				"id": 0
			}
		}
	}
}