{
	"id": "b144eb507def044cec6cd55f37c8f194",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ProxyStorage/ProxyPattern.sol": {
				"content": "\npragma solidity ^0.8.20;\n\n//This is the implementation of the normal proxy pattern\n//Used delegate is the Contract 1_Storage.sol provided upfront by remix.ethereum.org\n// calldata: 0x6057361d0000000000000000000000000000000000000000000000000000000000000006\ncontract ProxyPattern{\n\n    \n    event numberUpdated(uint256 numberOld, uint256 numberNew);\n\n    constructor(address _delegate){\n        bytes32 position = keccak256(\"delegate\");\n            assembly {\n            sstore(position, _delegate)}\n    }\n\n    //variable is accessed via unstructured storage\n    function getNumber() public view returns(uint256 num){\n        bytes32 position = keccak256(\"number\");\n        assembly {\n        num := sload(position)\n      }\n    }\n\n    //variable is accessed via unstructured storage\n    function getDelegate() public view returns(address delegate){\n        bytes32 position = keccak256(\"delegate\");\n        assembly {\n        delegate := sload(position)\n      }\n    }\n\n    //fallback function\n    fallback() external payable{\n        // get facet from function selector\n        address _delegate = getDelegate();\n        require(_delegate != address(0));\n        // Execute external function from facet using delegatecall and return any value.\n        assembly {\n            // copy function selector and any arguments\n            \n            calldatacopy(0x0, 0x0, calldatasize())\n            \n            // execute function call using the facet\n            let result := delegatecall(gas(), _delegate, 0x0, calldatasize(), 0x0, 0x0)\n            // get any return value\n            returndatacopy(0x0, 0x0, returndatasize())\n            // return any return value or error back to the caller\n            switch result\n            case 0 {revert(0x0, returndatasize())}\n            default {return (0x0, returndatasize())}\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ProxyStorage/ProxyPattern.sol": {
				"ProxyPattern": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delegate",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "numberOld",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "numberNew",
									"type": "uint256"
								}
							],
							"name": "numberUpdated",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getDelegate",
							"outputs": [
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ProxyStorage/ProxyPattern.sol\":257:1842  contract ProxyPattern{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":354:505  constructor(address _delegate){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":394:410  bytes32 position */\n  0x00\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":413:434  keccak256(\"delegate\") */\n  0x6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":394:434  bytes32 position = keccak256(\"delegate\") */\n  swap1\n  pop\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":488:497  _delegate */\n  dup2\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":478:486  position */\n  dup2\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":471:498  sstore(position, _delegate) */\n  sstore\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":457:499  {... */\n  pop\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":354:505  constructor(address _delegate){... */\n  pop\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":257:1842  contract ProxyPattern{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ProxyStorage/ProxyPattern.sol\":257:1842  contract ProxyPattern{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":257:1842  contract ProxyPattern{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbc7f3b50\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2c9ecd8\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1078:1095  address _delegate */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1098:1111  getDelegate() */\n      tag_7\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1098:1109  getDelegate */\n      tag_8\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1098:1111  getDelegate() */\n      jump\t// in\n    tag_7:\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1078:1111  address _delegate = getDelegate() */\n      swap1\n      pop\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1150:1151  0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1129:1152  _delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1129:1138  _delegate */\n      dup2\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1129:1152  _delegate != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1121:1153  require(_delegate != address(0)) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1367:1381  calldatasize() */\n      calldatasize\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1362:1365  0x0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1357:1360  0x0 */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1344:1382  calldatacopy(0x0, 0x0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1532:1535  0x0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1527:1530  0x0 */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1511:1525  calldatasize() */\n      calldatasize\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1506:1509  0x0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1495:1504  _delegate */\n      dup5\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1488:1493  gas() */\n      gas\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1475:1536  delegatecall(gas(), _delegate, 0x0, calldatasize(), 0x0, 0x0) */\n      delegatecall\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1610:1626  returndatasize() */\n      returndatasize\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1605:1608  0x0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1600:1603  0x0 */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1585:1627  returndatacopy(0x0, 0x0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1714:1720  result */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1738:1739  0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1733:1771  case 0 {revert(0x0, returndatasize())} */\n      dup2\n      eq\n      tag_11\n      jumpi\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1806:1822  returndatasize() */\n      returndatasize\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1801:1804  0x0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1793:1823  return (0x0, returndatasize()) */\n      return\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1733:1771  case 0 {revert(0x0, returndatasize())} */\n    tag_11:\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1753:1769  returndatasize() */\n      returndatasize\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1748:1751  0x0 */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":1741:1770  revert(0x0, returndatasize()) */\n      revert\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":787:967  function getDelegate() public view returns(address delegate){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_8\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":563:729  function getNumber() public view returns(uint256 num){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":787:967  function getDelegate() public view returns(address delegate){... */\n    tag_8:\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":830:846  address delegate */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":857:873  bytes32 position */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":876:897  keccak256(\"delegate\") */\n      0x6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":857:897  bytes32 position = keccak256(\"delegate\") */\n      swap1\n      pop\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":944:952  position */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":938:953  sload(position) */\n      sload\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":926:953  delegate := sload(position) */\n      swap2\n      pop\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":916:961  {... */\n      pop\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":787:967  function getDelegate() public view returns(address delegate){... */\n      swap1\n      jump\t// out\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":563:729  function getNumber() public view returns(uint256 num){... */\n    tag_18:\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":604:615  uint256 num */\n      0x00\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":626:642  bytes32 position */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":645:664  keccak256(\"number\") */\n      0xf648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f8\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":626:664  bytes32 position = keccak256(\"number\") */\n      swap1\n      pop\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":706:714  position */\n      dup1\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":700:715  sload(position) */\n      sload\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":693:715  num := sload(position) */\n      swap2\n      pop\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":683:723  {... */\n      pop\n        /* \"contracts/ProxyStorage/ProxyPattern.sol\":563:729  function getNumber() public view returns(uint256 num){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_23:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_24:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_31\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_23\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_25:\n        /* \"#utility.yul\":328:352   */\n      tag_33\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_24\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_15:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_35\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_25\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_26:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_27:\n        /* \"#utility.yul\":763:787   */\n      tag_38\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_26\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_20:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_40\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_27\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206aaa3010a07e8b5411d68fd00203bc54484cc3cc94fd53d26c52c4c8b7985f8364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 95,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516102f03803806102f0833981810160405281019061003191906100bd565b5f7f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec905081815550506100e8565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61008c82610063565b9050919050565b61009c81610082565b81146100a6575f80fd5b50565b5f815190506100b781610093565b92915050565b5f602082840312156100d2576100d161005f565b5b5f6100df848285016100a9565b91505092915050565b6101fb806100f55f395ff3fe60806040526004361061002c575f3560e01c8063bc7f3b501461008e578063f2c9ecd8146100b85761002d565b5b5f6100366100e2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361006f575f80fd5b365f80375f80365f845af43d5f803e805f811461008a573d5ff35b3d5ffd5b348015610099575f80fd5b506100a26100e2565b6040516100af919061017b565b60405180910390f35b3480156100c3575f80fd5b506100cc61010f565b6040516100d991906101ac565b60405180910390f35b5f807f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec9050805491505090565b5f807ff648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f89050805491505090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101658261013c565b9050919050565b6101758161015b565b82525050565b5f60208201905061018e5f83018461016c565b92915050565b5f819050919050565b6101a681610194565b82525050565b5f6020820190506101bf5f83018461019d565b9291505056fea26469706673582212206aaa3010a07e8b5411d68fd00203bc54484cc3cc94fd53d26c52c4c8b7985f8364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2F0 CODESIZE SUB DUP1 PUSH2 0x2F0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xBD JUMP JUMPDEST PUSH0 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP2 DUP2 SSTORE POP POP PUSH2 0xE8 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8C DUP3 PUSH2 0x63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C DUP2 PUSH2 0x82 JUMP JUMPDEST DUP2 EQ PUSH2 0xA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7 DUP2 PUSH2 0x93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD2 JUMPI PUSH2 0xD1 PUSH2 0x5F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF DUP5 DUP3 DUP6 ADD PUSH2 0xA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FB DUP1 PUSH2 0xF5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC7F3B50 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0xB8 JUMPI PUSH2 0x2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x36 PUSH2 0xE2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x8A JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF648814C67221440671FD7C2DE979DB4020A9320FB7985FF79CA8E7DCED277F8 SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165 DUP3 PUSH2 0x13C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175 DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E PUSH0 DUP4 ADD DUP5 PUSH2 0x16C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x194 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF PUSH0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xAA3010A07E8B5411D68FD0 MUL SUB 0xBC SLOAD BASEFEE 0x4C 0xC3 0xCC SWAP5 REVERT MSTORE8 0xD2 PUSH13 0x52C4C8B7985F8364736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "257:1585:0:-:0;;;354:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;394:16;413:21;394:40;;488:9;478:8;471:27;457:42;354:151;257:1585;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;257:1585:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDelegate_46": {
									"entryPoint": 226,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumber_33": {
									"entryPoint": 271,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1025:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:1",
														"type": ""
													}
												],
												"src": "593:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"src": "676:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "800:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002c575f3560e01c8063bc7f3b501461008e578063f2c9ecd8146100b85761002d565b5b5f6100366100e2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361006f575f80fd5b365f80375f80365f845af43d5f803e805f811461008a573d5ff35b3d5ffd5b348015610099575f80fd5b506100a26100e2565b6040516100af919061017b565b60405180910390f35b3480156100c3575f80fd5b506100cc61010f565b6040516100d991906101ac565b60405180910390f35b5f807f6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec9050805491505090565b5f807ff648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f89050805491505090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101658261013c565b9050919050565b6101758161015b565b82525050565b5f60208201905061018e5f83018461016c565b92915050565b5f819050919050565b6101a681610194565b82525050565b5f6020820190506101bf5f83018461019d565b9291505056fea26469706673582212206aaa3010a07e8b5411d68fd00203bc54484cc3cc94fd53d26c52c4c8b7985f8364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC7F3B50 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xF2C9ECD8 EQ PUSH2 0xB8 JUMPI PUSH2 0x2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x36 PUSH2 0xE2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x8A JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH32 0x6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH32 0xF648814C67221440671FD7C2DE979DB4020A9320FB7985FF79CA8E7DCED277F8 SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165 DUP3 PUSH2 0x13C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175 DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E PUSH0 DUP4 ADD DUP5 PUSH2 0x16C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x194 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BF PUSH0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xAA3010A07E8B5411D68FD0 MUL SUB 0xBC SLOAD BASEFEE 0x4C 0xC3 0xCC SWAP5 REVERT MSTORE8 0xD2 PUSH13 0x52C4C8B7985F8364736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "257:1585:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;1078:17;1098:13;:11;:13::i;:::-;1078:33;;1150:1;1129:23;;:9;:23;;;1121:32;;;;;;1367:14;1362:3;1357;1344:38;1532:3;1527;1511:14;1506:3;1495:9;1488:5;1475:61;1610:16;1605:3;1600;1585:42;1714:6;1738:1;1733:38;;;;1806:16;1801:3;1793:30;1733:38;1753:16;1748:3;1741:29;787:180;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;563:166;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;787:180;830:16;857;876:21;857:40;;944:8;938:15;926:27;;916:45;787:180;:::o;563:166::-;604:11;626:16;645:19;626:38;;706:8;700:15;693:22;;683:40;563:166;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "101400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"getDelegate()": "2471",
								"getNumber()": "2445"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 257,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 505,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 505,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 505,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 354,
									"end": 505,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 354,
									"end": 505,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 354,
									"end": 505,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 354,
									"end": 505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 354,
									"end": 505,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 394,
									"end": 410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC"
								},
								{
									"begin": 394,
									"end": 434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 394,
									"end": 434,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 488,
									"end": 497,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 478,
									"end": 486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 471,
									"end": 498,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 457,
									"end": 499,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 354,
									"end": 505,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 1842,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206aaa3010a07e8b5411d68fd00203bc54484cc3cc94fd53d26c52c4c8b7985f8364736f6c63430008140033",
									".code": [
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "BC7F3B50"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "F2C9ECD8"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1098,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1098,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1525,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1493,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1536,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1771,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1733,
											"end": 1771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1822,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1823,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1771,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1733,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 787,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 787,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 563,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 787,
											"end": 967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "6FDCB8FFF5EF717A847D344B0A6AE7BE40A2656CCE2C3881DD009FC855B9D1EC"
										},
										{
											"begin": 857,
											"end": 897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 938,
											"end": 953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 563,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "F648814C67221440671FD7C2DE979DB4020A9320FB7985FF79CA8E7DCED277F8"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 706,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 693,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 693,
											"end": 715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ProxyStorage/ProxyPattern.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getDelegate()": "bc7f3b50",
							"getNumber()": "f2c9ecd8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numberOld\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numberNew\",\"type\":\"uint256\"}],\"name\":\"numberUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getDelegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProxyStorage/ProxyPattern.sol\":\"ProxyPattern\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ProxyStorage/ProxyPattern.sol\":{\"keccak256\":\"0x384ec4ada4a63b399fa195c93f4d749516cd4db26417b80050069014fe784ff3\",\"urls\":[\"bzz-raw://2fa0e03d83b38043e780af0fcb1d8b7ceec3d5bd06632ccb9bcf51620ac860dc\",\"dweb:/ipfs/QmQs67fSPrpA22iswmzaTxHj3djziWcw7SwwSrAY4h6Szv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ProxyStorage/ProxyPattern.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ProxyStorage/ProxyPattern.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/ProxyStorage/ProxyPattern.sol:7:1:\n  |\n7 | contract ProxyPattern{\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/ProxyStorage/ProxyPattern.sol:35:5:\n   |\n35 |     fallback() external payable{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 1840,
						"file": "contracts/ProxyStorage/ProxyPattern.sol",
						"message": "The payable fallback function is defined here.",
						"start": 997
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1842,
					"file": "contracts/ProxyStorage/ProxyPattern.sol",
					"start": 257
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ProxyStorage/ProxyPattern.sol": {
				"ast": {
					"absolutePath": "contracts/ProxyStorage/ProxyPattern.sol",
					"exportedSymbols": {
						"ProxyPattern": [
							66
						]
					},
					"id": 67,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ProxyPattern",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "ProxyPattern",
							"nameLocation": "266:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "109e063a1f44684827deee572e5013a35bfc4c839fcfcc571cfcf0e7812d895c",
									"id": 7,
									"name": "numberUpdated",
									"nameLocation": "296:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "numberOld",
												"nameLocation": "318:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "310:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "numberNew",
												"nameLocation": "337:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "329:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:38:0"
									},
									"src": "290:58:0"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "384:121:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "402:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 19,
														"src": "394:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 12,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "64656c6567617465",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "423:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															},
															"value": "delegate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															}
														],
														"id": 14,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "413:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "413:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "394:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "457:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "478:8:0"
																	},
																	{
																		"name": "_delegate",
																		"nodeType": "YulIdentifier",
																		"src": "488:9:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:27:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "471:27:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "488:9:0",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "478:8:0",
														"valueSize": 1
													}
												],
												"id": 18,
												"nodeType": "InlineAssembly",
												"src": "448:51:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_delegate",
												"nameLocation": "374:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "366:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:19:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:0"
									},
									"scope": 66,
									"src": "354:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "616:113:0",
										"statements": [
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "634:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 32,
														"src": "626:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 25,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 30,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "6e756d626572",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "655:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f8",
																"typeString": "literal_string \"number\""
															},
															"value": "number"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f648814c67221440671fd7c2de979db4020a9320fb7985ff79ca8e7dced277f8",
																"typeString": "literal_string \"number\""
															}
														],
														"id": 27,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "645:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "645:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "626:38:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "683:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "693:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "706:8:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "700:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:0"
															},
															"variableNames": [
																{
																	"name": "num",
																	"nodeType": "YulIdentifier",
																	"src": "693:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "693:3:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "706:8:0",
														"valueSize": 1
													}
												],
												"id": 31,
												"nodeType": "InlineAssembly",
												"src": "674:49:0"
											}
										]
									},
									"functionSelector": "f2c9ecd8",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumber",
									"nameLocation": "572:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "612:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "604:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:13:0"
									},
									"scope": 66,
									"src": "563:166:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "847:120:0",
										"statements": [
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "865:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 45,
														"src": "857:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 38,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "64656c6567617465",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "886:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															},
															"value": "delegate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6fdcb8fff5ef717a847d344b0a6ae7be40a2656cce2c3881dd009fc855b9d1ec",
																"typeString": "literal_string \"delegate\""
															}
														],
														"id": 40,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "876:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "876:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "857:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "916:45:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "926:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "944:8:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "938:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:15:0"
															},
															"variableNames": [
																{
																	"name": "delegate",
																	"nodeType": "YulIdentifier",
																	"src": "926:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "926:8:0",
														"valueSize": 1
													},
													{
														"declaration": 39,
														"isOffset": false,
														"isSlot": false,
														"src": "944:8:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "907:54:0"
											}
										]
									},
									"functionSelector": "bc7f3b50",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegate",
									"nameLocation": "796:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "838:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "830:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:18:0"
									},
									"scope": 66,
									"src": "787:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1024:816:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "_delegate",
														"nameLocation": "1086:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 64,
														"src": "1078:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 49,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1078:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 51,
														"name": "getDelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1098:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1098:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1078:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "_delegate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1129:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1150:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1142:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 56,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1142:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1142:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1129:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1121:32:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1261:573:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1357:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1367:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1344:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1344:38:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1461:75:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1488:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1488:5:0"
																	},
																	{
																		"name": "_delegate",
																		"nodeType": "YulIdentifier",
																		"src": "1495:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1511:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1511:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1527:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:3:0",
																		"type": "",
																		"value": "0x0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:61:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1465:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1610:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1610:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1585:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:42:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1585:42:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1740:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1748:3:0",
																							"type": "",
																							"value": "0x0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1753:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1753:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1741:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1741:29:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1741:29:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1733:38:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1738:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1792:32:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1801:3:0",
																							"type": "",
																							"value": "0x0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1806:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1806:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1793:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1793:30:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1793:30:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1784:40:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1714:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "1707:117:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "1495:9:0",
														"valueSize": 1
													}
												],
												"id": 63,
												"nodeType": "InlineAssembly",
												"src": "1252:582:0"
											}
										]
									},
									"id": 65,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1024:0:0"
									},
									"scope": 66,
									"src": "997:843:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 67,
							"src": "257:1585:0",
							"usedErrors": [],
							"usedEvents": [
								7
							]
						}
					],
					"src": "1:1841:0"
				},
				"id": 0
			}
		}
	}
}